plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.squareup.anvil'
}

apply from: "./launcher.gradle"

android {
    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileSdkVersion rootProject.ext.compileSdk

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.compileSdk

        multiDexEnabled true
        applicationId "com.esafirm.androidplayground"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }

    signingConfigs {
        release {
            storeFile file(certificateLocation)
            storePassword certificateStorePassword
            keyAlias certificateKeyAlias
            keyPassword certificateKeyPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'

        // React Native + Flipper
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            // Configure whether failing tests should fail the build
            ignoreFailures false

            testLogging {
                events "passed", "skipped", "failed"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.multidex:multidex:2.0.0"

    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    /* Android Support */
    final androidXVersion = '1.0.0'
    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.recyclerview:recyclerview:$androidXVersion"
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    /* Dagger 2 */
    final daggerVersion = '2.43.2'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    /* RxJava */
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "com.github.akarnokd:rxjava2-interop:0.10.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    /* Conductor */
    final conductorVersion = '2.1.4'
    implementation "com.bluelinelabs:conductor:$conductorVersion"
    implementation "com.bluelinelabs:conductor-rxlifecycle:$conductorVersion"
    implementation "com.bluelinelabs:conductor-support:$conductorVersion"

    final conductorExtraVersion = '2.1.0'
    implementation "com.github.esafirm:conductor-extra:$conductorExtraVersion"
    implementation "com.github.esafirm.conductor-extra:conductor-extra-butterknife:$conductorExtraVersion"

    final butterknifeVersion = '10.1.0'
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    /* Redux for Android */
    final reductorVersion = '0.13.1'
    implementation "com.yheriatovych:reductor:$reductorVersion"
    kapt "com.yheriatovych:reductor-processor:$reductorVersion"

    /* AnvilController | React Render Like */
    implementation 'co.trikita:anvil-sdk15:0.4.0'

    /* Conceal */
    implementation 'com.facebook.conceal:conceal:1.1.3@aar'

    /* Android Architecture Components */
    implementation "androidx.activity:activity-ktx:1.2.3"

    final lifecycle_version = "2.3.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "androidx.datastore:datastore-preferences:1.0.0-rc01"

    final roomVersion = "2.1.0"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "android.arch.work:work-runtime-ktx:1.0.0-alpha10"

    /* Stetho */
    implementation 'com.facebook.stetho:stetho:1.5.0'

    /* Lottie */
    implementation 'com.airbnb.android:lottie:2.3.1'

    /* Bcrypt */
    implementation 'org.mindrot:jbcrypt:0.4'

    /* Network */
    final okHttpVersion = '3.9.1'
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    final retrofitVersion = '2.6.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    /* Leak Canary */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.1'

    /* Coroutine */
    final coroutineVersion = '1.4.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    /* Flipper */
    // Because we include react native, flipper must exclude it deps
    final flipperVersion = '0.40.0'
    debugImplementation("com.facebook.flipper:flipper:$flipperVersion") {
        exclude group: 'com.facebook.yoga'
        exclude group: 'com.facebook.fbjni', module: 'fbjni'
        exclude group: 'com.facebook.litho', module: 'litho-annotations'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:$flipperVersion") {
        exclude group: 'com.facebook.yoga'
        exclude group: 'com.facebook.fbjni', module: 'fbjni'
        exclude group: 'com.facebook.litho', module: 'litho-annotations'
    }
    debugImplementation "com.facebook.soloader:soloader:0.9.0"
    releaseImplementation "com.facebook.flipper:flipper-noop:$flipperVersion"

    /* VasSonicController */
    implementation 'com.tencent.sonic:sdk:3.1.0'

    /* For Testing Test */
    implementation project(':lib_test')

    /* React Native */
    implementation "com.facebook.react:react-native:0.68.2" // From node_modules

    final hermesPath = "$rootDir/rn/node_modules/hermes-engine/android/"
    debugImplementation files(hermesPath + "hermes-debug.aar")
    releaseImplementation files(hermesPath + "hermes-release.aar")

    /* Beagle */
    final beagleVersion = "1.2.1"
    debugImplementation "com.github.pandulapeter.beagle:beagle:$beagleVersion"
    releaseImplementation "com.github.pandulapeter.beagle:beagle-noop:$beagleVersion"

    /* Glide */
    final glideVersion = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glideVersion") {
        exclude group: 'glide-parent'
    }

    /* Firebase */
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'com.google.firebase:firebase-config-ktx:19.1.2'

    /* FFMPEG */
    implementation 'nl.bravobit:android-ffmpeg:1.1.7'

    /* Kotlinx Serialization */
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"

    /* TransactionTooLarge checker */
    implementation 'com.gu.android:toolargetool:0.3.0'

    /* Anvil DI Related */
    implementation project(':anvil-scope')
    implementation project(':feature-printer')
    implementation project(':data-impl')

    /* Test */
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.4.0'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"
}